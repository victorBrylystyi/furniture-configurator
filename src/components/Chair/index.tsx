/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Chair: THREE.Mesh
    Cushion: THREE.Mesh
    Legs1: THREE.Mesh
    Legs2: THREE.Mesh
  }
  materials: {
    Chair: THREE.MeshStandardMaterial
    Cushion: THREE.MeshStandardMaterial
    Legs: THREE.MeshStandardMaterial
  }
}

export const Chair = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('/models/chair.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Chair" geometry={nodes.Chair.geometry} material={materials.Chair} />
        <mesh
          name="Cushion"
          geometry={nodes.Cushion.geometry}
          material={materials.Cushion}
          position={[0, 0.064, 0.045]}
        />
        <mesh name="Legs1" geometry={nodes.Legs1.geometry} material={materials.Legs} />
        <mesh name="Legs2" geometry={nodes.Legs2.geometry} material={materials.Legs} visible={false} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/chair.gltf')
